---
import Icon, { type Props as IconProps } from './Icon.astro';
import ThemeToggle from './ThemeToggle.astro';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/' },
	{ label: 'Work', href: '/work/' },
	{ label: 'About', href: '/about/' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: IconProps['icon'] }[] = [
	{ label: 'Twitter', href: 'https://twitter.com/bearish_bulls', icon: 'twitter-logo' },
	{ label: 'Twitch', href: 'https://www.twitch.tv/antman2022', icon: 'twitch-logo' },
	{ label: 'GitHub', href: 'https://www.github.com/ap519925', icon: 'github-logo' },
	{ label: 'YouTube', href: 'https://www.youtube.com/@jpowbrrrrrr', icon: 'youtube-logo' },
];
---

<nav>
	<div class="menu-header">
		<a href="/" class="site-title">
			<img class="" src="/assets/alogo.png" width="150" height="150">
		</a>
		
				<button class="menu-button" aria-expanded="false">
					<span class="sr-only">Menu</span>
					<div class="icon-wrapper">
						<span class="menu-icon"><Icon icon="list" /></span>
						<span class="close-icon"><Icon icon="close" /></span>
					</div>
				</button>
		
	</div>
	<div id="menu-content">
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a
							aria-current={Astro.url.pathname === href}
							class:list={[
								'link',
								{
									active:
										Astro.url.pathname === href ||
										(href !== '/' && Astro.url.pathname.startsWith(href)),
								},
							]}
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
			<div class="theme-toggle">
				<ThemeToggle />
			</div>
		</div>
	</div>
</nav>

<script>
	
	const btn = document.querySelector('.menu-button')!;

	// Hide menu (shown by default to support no-JS browsers).
	const menu = document.getElementById('menu-content')!;
	menu.style.opacity = '0';
	menu.style.visibility = 'hidden';
	menu.style.pointerEvents = 'none';
	document.body.style.overflow = '';

	/** Set whether the menu is currently expanded or collapsed. */
	const setExpanded = (expand: boolean) => {
		btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
		console.log('setExpanded called', expand);
		document.body.style.overflow = expand ? 'hidden' : 'auto';
		menu.style.opacity = expand ? '1' : '0';
		menu.style.visibility = expand ? 'visible' : 'hidden';
		menu.style.pointerEvents = expand ? 'auto' : 'none';
	};

	// Toggle menu visibility when the menu button is clicked.
		btn.addEventListener('click', () => {
			console.log('Menu button clicked');
			const expanded = btn.getAttribute('aria-expanded') === 'true';
			setExpanded(!expanded);
		});
</script>

<style>
	nav {
		z-index: 9999;
		position: relative;
		font-family: var(--font-brand);
		font-weight: 500;
		margin-bottom: 3.5rem;
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1.5rem;
	}

	.site-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
	}

	.menu-button {
		position: relative;
		display: flex;
		z-index: 9999;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 2.5rem;
		color: var(--gray-300);
		transition: all 0.3s ease;
	}

	.icon-wrapper {
		position: relative;
		width: 1.5rem;
		height: 1.5rem;
	}

	.menu-icon,
	.close-icon {
		position: absolute;
		top: 0;
		left: 0;
		transition: opacity 0.3s ease, transform 0.3s ease;
	}

	.close-icon {
		opacity: 0;
		transform: scale(0);
	}

	.menu-button[aria-expanded='true'] .menu-icon {
		opacity: 0;
		transform: scale(0);
	}

	.menu-button[aria-expanded='true'] .close-icon {
		opacity: 1;
		transform: scale(1);
	}

	.menu-button[aria-expanded='true'] {
		color: var(--gray-0);
	}

	#menu-content {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(37, 36, 58, 0.95);
		backdrop-filter: blur(10px);
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		opacity: 0;
		visibility: hidden;
		pointer-events: auto;
		transition: all 0.3s ease;
		padding: 2rem;
	}

	#menu-content.show {
		opacity: 1;
		visibility: visible;
		pointer-events: auto;
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		font-size: var(--text-2xl);
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		text-align: center;
	}

	.link {
		display: inline-block;
		color: var(--gray-300);
		text-decoration: none;
		transition: all 0.3s ease;
	}

	.link:hover,
	.link:focus {
		color: var(--gray-0);
		transform: scale(1.1);
	}

	.link.active {
		color: var(--accent-regular);
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		align-items: center;
	}

	.socials {
		display: flex;
		flex-wrap: wrap;
		gap: 1.5rem;
		font-size: var(--icon-size);
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.social:hover,
	.social:focus {
		color: var(--accent-text-over);
	}

	

	@media (min-width: 60em) {
		.socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}
	}
</style>
