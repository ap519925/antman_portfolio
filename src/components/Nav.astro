---
import Icon, { Props as IconProps } from './Icon.astro';
import ThemeToggle from './ThemeToggle.astro';

/** Main menu items */
const textLinks: { label: string; href: string }[] = [
	{ label: 'Home', href: '/' },
	{ label: 'Work', href: '/work/' },
	{ label: 'About', href: '/about/' },
];

/** Icon links to social media â€” edit these with links to your profiles! */
const iconLinks: { label: string; href: string; icon: IconProps['icon'] }[] = [
	{ label: 'Twitter', href: 'https://twitter.com/bearish_bulls', icon: 'twitter-logo' },
	{ label: 'Twitch', href: 'https://www.twitch.tv/antman2022', icon: 'twitch-logo' },
	{ label: 'GitHub', href: 'https://github.com/phillias2233', icon: 'github-logo' },
	{ label: 'YouTube', href: 'https://www.youtube.com/@jpowbrrrrrr', icon: 'youtube-logo' },
];
---

<nav>
	<div class="menu-header">
		<a href="/" class="site-title">
			<img class="" src="/assets/alogo.png" width="150" height="150">
		</a>
		<menu-button>
			<template>
				<button class="menu-button" aria-expanded="false">
					<span class="sr-only">Menu</span>
					<Icon icon="list" />
				</button>
			</template>
		</menu-button>
	</div>
	<div id="menu-content">
		<ul class="nav-items">
			{
				textLinks.map(({ label, href }) => (
					<li>
						<a
							aria-current={Astro.url.pathname === href}
							class:list={[
								'link',
								{
									active:
										Astro.url.pathname === href ||
										(href !== '/' && Astro.url.pathname.startsWith(href)),
								},
							]}
							href={href}
						>
							{label}
						</a>
					</li>
				))
			}
		</ul>
		<div class="menu-footer">
			<div class="socials">
				{
					iconLinks.map(({ href, icon, label }) => (
						<a href={href} class="social">
							<span class="sr-only">{label}</span>
							<Icon icon={icon} />
						</a>
					))
				}
			</div>
			<div class="theme-toggle">
				<ThemeToggle />
			</div>
		</div>
	</div>
</nav>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById('menu-content')!;
			menu.hidden = true;

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
				menu.hidden = !expand;
				document.body.style.overflow = expand ? 'hidden' : '';
				if (expand) {
					menu.classList.add('show');
				} else {
					menu.classList.remove('show');
				}
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menu.hidden));
		}
	}
	customElements.define('menu-button', MenuButton);
</script>

<style>
	nav {
		z-index: 9999;
		position: relative;
		font-family: var(--font-brand);
		font-weight: 500;
		margin-bottom: 3.5rem;
	}

	.menu-header {
		display: flex;
		justify-content: space-between;
		gap: 0.5rem;
		padding: 1.5rem;
	}

	.site-title {
		display: flex;
		gap: 0.5rem;
		align-items: center;
		line-height: 1.1;
		color: var(--gray-0);
		text-decoration: none;
	}

	.menu-button {
		position: relative;
		display: flex;
		border: 0;
		border-radius: 999rem;
		padding: 0.5rem;
		font-size: 1.5rem;
		color: var(--gray-300);
		background: radial-gradient(var(--gray-900), var(--gray-800) 150%);
		box-shadow: var(--shadow-md);
		transition: all 0.3s ease;
	}

	.menu-button[aria-expanded='true'] {
		color: var(--gray-0);
		background: linear-gradient(180deg, var(--gray-600), transparent),
			radial-gradient(var(--gray-900), var(--gray-800) 150%);
		transform: rotate(90deg);
	}

	#menu-content {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(37, 36, 58, 0.95);
		backdrop-filter: blur(10px);
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		opacity: 0;
		visibility: hidden;
		transition: all 0.3s ease;
		padding: 2rem;
	}

	#menu-content.show {
		opacity: 1;
		visibility: visible;
	}

	.nav-items {
		margin: 0;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		font-size: var(--text-2xl);
		line-height: 1.2;
		list-style: none;
		padding: 2rem;
		text-align: center;
	}

	.link {
		display: inline-block;
		color: var(--gray-300);
		text-decoration: none;
		transition: all 0.3s ease;
	}

	.link:hover,
	.link:focus {
		color: var(--gray-0);
		transform: scale(1.1);
	}

	.link.active {
		color: var(--accent-regular);
	}

	.menu-footer {
		--icon-size: var(--text-xl);
		--icon-padding: 0.5rem;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		align-items: center;
	}

	.socials {
		display: flex;
		flex-wrap: wrap;
		gap: 1.5rem;
		font-size: var(--icon-size);
	}

	.social {
		display: flex;
		padding: var(--icon-padding);
		text-decoration: none;
		color: var(--accent-dark);
		transition: color var(--theme-transition);
	}

	.social:hover,
	.social:focus {
		color: var(--accent-text-over);
	}

	@media (min-width: 50em) {
		nav {
			display: grid;
			grid-template-columns: 1fr auto 1fr;
			align-items: center;
			padding: 2.5rem 5rem;
			gap: 1rem;
		}

		.menu-header {
			padding: 0;
		}

		.menu-button {
			display: none;
		}

		.site-title {
			font-size: var(--text-lg);
		}

		#menu-content {
			position: static;
			opacity: 1;
			visibility: visible;
			display: contents;
			padding: 0;
			background: none;
			backdrop-filter: none;
		}

		.nav-items {
			position: relative;
			flex-direction: row;
			font-size: var(--text-sm);
			border-radius: 3rem;
			border: 0;
			padding: 0.5rem 0.5625rem;
			background: rgba(0, 0, 0, 0.75);
		}

		.nav-items::before {
			position: absolute;
			inset: -1px;
			content: '';
			background: var(--gradient-stroke);
			border-radius: 3rem;
			z-index: -1;
		}

		.link {
			padding: 0.5rem 1rem;
			border-radius: 3rem;
			transition: color var(--theme-transition),
				background-color var(--theme-transition);
		}

		.link:hover,
		.link:focus {
			color: var(--gray-100);
			background-color: var(--accent-subtle-overlay);
			transform: none;
		}

		.link.active {
			color: var(--accent-text-over);
			background-color: var(--accent-regular);
		}

		.menu-footer {
			--icon-padding: 0.375rem;
			flex-direction: row;
			justify-content: flex-end;
			align-items: center;
			padding: 0;
			background-color: transparent;
			box-shadow: none;
			gap: 0.75rem;
		}

		.socials {
			display: none;
			gap: 0;
		}
	}

	@media (min-width: 60em) {
		.socials {
			display: flex;
			justify-content: flex-end;
			gap: 0;
		}
	}
</style>
